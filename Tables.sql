-- Tables
CREATE TABLE IF NOT EXISTS Users (
    id INT PRIMARY KEY,
    CNIC INT ,
    Email VARCHAR(40)NOT NULL ,
    UserPassword  VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(15) NOT NULL,
    Province VARCHAR(20) NOT NULL,
    District VARCHAR(20) NOT NULL,
    City VARCHAR(20) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedat TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    createdBy INT NOT NULL,
    updatedBy INT,
   
);
CREATE TABLE IF NOT EXISTS Project(
    id INT PRIMARY KEY NOT NULL,
    ProjectName VARCHAR(100) NOT NULL,
    Description TEXT NOT NULL,
    Status VARCHAR(25) NOT NULL,
    CreatedBy INT NOT NULL,
    UpdatedBy INT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CreatedBy) REFERENCES Users(CNIC) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (UpdatedBy) REFERENCES Users(CNIC) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Unit(
    id INT PRIMARY KEY ,
    BuildingNumber VARCHAR(20) NOT NULL,
    FloorNumber VARCHAR(25) NOT NULL,
    OccupiedBy INT,-- Foreign key to Users table
    ProjectUnit INT NOT NULL, -- Foreign key to Project table
    Status VARCHAR(25) NOT NULL
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CreatedBy INT NOT NULL,
    UpdatedBy INT,
    FOREIGN KEY (OccupiedBy) REFERENCES Users(CNIC) ON DELETE SET NULL ON UPDATE CASCADE
    FOREIGN KEY (ProjectUnit) REFERENCES Project(ProjectID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABE IF NOT EXISTS Complaints(
    id VARCHAR(20) PRIMARY KEY,
    Titel VARCHAR(100) NOT NULL,
    Description TEXT NOT NULL,
    Status VARCHAR(20) NOT NULL,
    UnitID INT NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CreatedBy INT NOT NULL,
    UpdatedBy INT,
    FOREIGN KEY (CreatedBy) REFERENCES Users(CNIC) ON DELETE RESTRICT ON UPDATE CASCADE
    FOREIGN KEY (UpdatedBy) REFERENCES Users(CNIC) ON DELETE SET NULL  ON UPDATE CASCADE
    FOREIGN KEY (UnitID) REFERENCES Unit(UnitID) ON DELETE CASCADE ON UPDATE CASCADE

);
CREATE TABLE IF NOT EXISTS Documents(
    id INT PRIMARY KEY ,
    DocumentType VARCHAR(25) NOT NULL,
    FileURl VARCHAR(255) NOT NULL,
    createdby INT NOT NULL,
    updatedby INT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    sourceTable VARCHAR(50) NOT NULL, 
    sourceID INT NOT NULL,
    FOREIGN KEY (createdBy) REFERENCES Users(CNIC) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (updatedby) REFERENCES Users(CNIC) ON DELETE SET NULL ON UPDATE CASCADE

);
CREATE TABLE IF NOT EXISTS DiscountRequest(
    id INT PRIMARY KEY,
    UnitID INT NOT NULL,// Foreign key to Unit table
    RequestedAmount FLOAT(10,2) NOT NULL,
    Reason TEXT NOT NULL,
    Status VARCHAR(20) NOT NULL,
    Remarks TEXT,
    sourceTable Text NOT NULL, 
    sourceID INT NOT NULL, 
    CreatedBy INT NOT NULL,
    UpdatedBy INT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CreatedBy) REFERENCES Users(CNIC) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (UpdatedBy) REFERENCES Users(CNIC) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (UnitID) REFERENCES Unit(UnitID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Notice(
    id INT PRIMARY KEY,
    Title VARCHAR(100) NOT NULL,
    Description TEXT NOT NULL,
    CreatedBy INT NOT NULL,
    UpdatedBy INT,
    Status VARCHAR(25) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CreatedBy) REFERENCES Users(CNIC) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (UpdatedBy) REFERENCES Users(CNIC) ON DELETE SET NULL ON UPDATE CASCADE
);
-- User and Notice, Project and Notice have a many-to-many relationship, so we need separate associative tables for each.
-- We can't use a single table because one notice can be linked to multiple users, units, and projects.
-- Putting all these links in one table would make the structure confusing and hard to manage.

CREATE TABLE UserNotice (
    CNIC BIGINT,
    NoticeID INT,
    NoticeType ENUM('General', 'Urgent', 'Reminder') NOT NULL, 
    Status ENUM('NOT Acknowledged', 'Acknowledged') DEFAULT 'NOT Acknowledged',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (CNIC, NoticeID),
    FOREIGN KEY (CNIC) REFERENCES Users(CNIC) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (NoticeID) REFERENCES Notice(NoticeID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE UnitNotice (
    UnitID INT,
    NoticeID INT,
    PRIMARY KEY (UnitID, NoticeID),
    NoticeType ENUM('General', 'Urgent', 'Reminder') NOT NULL, 
    Status ENUM('NOT Acknowledged', 'Acknowledged') DEFAULT 'NOT Acknowledged',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (UnitID) REFERENCES Unit(UnitID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (NoticeID) REFERENCES Notice(NoticeID)  ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE ProjectNotice (
    ProjectID INT,
    NoticeID INT,
    NoticeType ENUM('General', 'Urgent', 'Reminder') NOT NULL, 
    Status ENUM('NOT Acknowledged', 'Acknowledged') DEFAULT 'NOT Acknowledged',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ProjectID, NoticeID),
    FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (NoticeID) REFERENCES Notice(NoticeID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS ProjectMembers(
    ID INT NOT NULL,
    UserID INT NOT NULL,
    PRIMARY KEY (ProjectID, UserID),
    Role ENUM('Manager', 'Staff', 'Volunteer') NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id) REFERENCES Project(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(CNIC) ON DELETE RESTRICT ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS UtilityBills(
    BillID INT PRIMARY KEY,
    UnitID INT NOT NULL,
    BillType VARCHAR(25) NOT NULL,
    Amount DECIMAL(10, 2) NOT NULL,
    BillMonth Date NOT NULL,
    BillYear INT NOT NULL,
    DueDate DATE NOT NULL,
    PaymentDate DATE,
    PaidStatus VARCHAR(25) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CreatedBy INT NOT NULL,
    UpdatedBy INT,
    FOREIGN KEY (CreatedBy) REFERENCES Users(CNIC) ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (UpdatedBy) REFERENCES Users(CNIC) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (UnitID) REFERENCES Unit(UnitID) ON DELETE CASCADE ON UPDATE CASCADE
);
--Bill settings talble --- attributes ?